#!/usr/bin/env sh

echo "Finding path to this repo..."
current_directory=$(cd -- "$(dirname -- "$0")" > /dev/null 2>&1 && pwd)
echo "Repo detected at ${current_directory}"

echo "Doing a full system upgrade before starting the installation..."
sudo pacman -Syyu

echo "Installing packages required to run the install script..."
packages="${current_directory}/etc/required.txt"
if [ -s "$packages" ]; then
    # shellcheck disable=SC2024
    sudo pacman -S --needed - < "$packages"
fi

# Make sure XDG Base Directory Specification is used
XDG_CONFIG_HOME="${HOME}/.config"
XDG_CACHE_HOME="${HOME}/.cache"
XDG_DATA_HOME="${HOME}/.local/share"
XDG_STATE_HOME="${HOME}/.local/state"

echo "Creating directories according to the XDG Base Directory Specification..."
mkdir -vp "${XDG_CONFIG_HOME}"
mkdir -vp "${XDG_CACHE_HOME}"
mkdir -vp "${XDG_DATA_HOME}"
mkdir -vp "${XDG_STATE_HOME}"

echo "Creating directories necessary for the installation..."
mkdir -vp "${HOME}/.local/bin"
mkdir -vp "${HOME}/Pictures"
mkdir -vp "${HOME}/Pictures/Screenshots"

# Use stow to do most of this work
echo "Symlinking files with stow..."
stow --verbose=2 --dir "${current_directory}" --target "${HOME}" .


# Install additional packages
echo "Installing additional packages..."

if ! (which paru > /dev/null 2>&1); then
    echo "Installing paru from AUR..."
    if (
        git clone https://aur.archlinux.org/paru.git
        cd paru || exit
        makepkg -si --clean
        cd ..
        rm -rf paru
    ); then
        echo "Failed to install paru" >&2
    fi
else
    echo "paru already installed, skipping..."
fi

packages="${current_directory}/etc/packages.txt"
if [ -s "$packages" ]; then
    # shellcheck disable=SC2024
    sudo pacman -S --needed - < "$packages"
fi

packages="${current_directory}/etc/packages_paru.txt"
if [ -s "$packages" ]; then
    # shellcheck disable=SC2024
    sudo paru -S --needed - < "$packages"
fi

# Finishing up
echo "Setting up crontab"
crontab "${current_directory}/etc/crontab.txt"

echo "Setting up sudoers files"
for file in "${current_directory}/etc/sudoers/"*; do
    sudo cp --verbose "${file}" "/etc/sudoers.d/$(basename "${file}")"
done
